"""create database tables

Revision ID: c8be2ce1f55d
Revises: 
Create Date: 2024-07-17 11:19:28.901629

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c8be2ce1f55d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tokenblocklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tokenblocklist', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tokenblocklist_jti'), ['jti'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('communities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('coordinator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['coordinator_id'], ['users.id'], name=op.f('fk_communities_coordinator_id_users')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('surveys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('questions', sa.JSON(), nullable=False),
    sa.Column('survey_owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['survey_owner_id'], ['users.id'], name=op.f('fk_surveys_survey_owner_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('event_date', sa.DateTime(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('zoom_link', sa.String(length=255), nullable=True),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('coordinator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], name=op.f('fk_events_community_id_communities')),
    sa.ForeignKeyConstraint(['coordinator_id'], ['users.id'], name=op.f('fk_events_coordinator_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('survey_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('responses', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['survey_id'], ['surveys.id'], name=op.f('fk_survey_responses_survey_id_surveys')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_survey_responses_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_communities',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], name=op.f('fk_user_communities_community_id_communities')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_communities_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'community_id')
    )
    op.create_table('polls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=255), nullable=False),
    sa.Column('options', sa.JSON(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('poll_owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('fk_polls_event_id_events')),
    sa.ForeignKeyConstraint(['poll_owner_id'], ['users.id'], name=op.f('fk_polls_poll_owner_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('num_attendees', sa.Integer(), nullable=False),
    sa.Column('overview', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('fk_reports_event_id_events')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_reports_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transcriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('transcribed_content', sa.Text(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('fk_transcriptions_event_id_events')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('volunteer_hours',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('hours', sa.Float(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], name=op.f('fk_volunteer_hours_approved_by_users')),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('fk_volunteer_hours_event_id_events')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_volunteer_hours_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('poll_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('poll_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('response', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['poll_id'], ['polls.id'], name=op.f('fk_poll_responses_poll_id_polls')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_poll_responses_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('poll_responses')
    op.drop_table('volunteer_hours')
    op.drop_table('transcriptions')
    op.drop_table('reports')
    op.drop_table('polls')
    op.drop_table('user_communities')
    op.drop_table('survey_responses')
    op.drop_table('events')
    op.drop_table('surveys')
    op.drop_table('communities')
    op.drop_table('users')
    with op.batch_alter_table('tokenblocklist', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tokenblocklist_jti'))

    op.drop_table('tokenblocklist')
    # ### end Alembic commands ###
